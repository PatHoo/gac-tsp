apiVersion: v1
kind: Namespace
metadata:
  labels:
      app.kubernetes.io/name: windows
  name: windows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aspnet
  namespace: windows
spec:
  selector:
    matchLabels:
      app: aspnet
  replicas: 1
  template:
    metadata:
      labels:
        app: aspnet
    spec:
      containers:
      - name: aspnet
        image: mcr.microsoft.com/dotnet/framework/samples:aspnetapp
        env:
          - name: DEMO_NAME
            value: "World"
        command:
        - powershell.exe
        - -command
        - >
          echo '<html><body><H1>Hello, <%= Environment.GetEnvironmentVariable("DEMO_NAME") %>!</H1></body><html>' > C:\\inetpub\\wwwroot\\demo.aspx;
          C:\\ServiceMonitor.exe "w3svc";
        resources: {}
      nodeSelector:
        kubernetes.io/os: windows
---
apiVersion: v1
kind: Service
metadata:
  name: aspnet
  namespace: windows
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: aspnet
  sessionAffinity: None
  type: LoadBalancer
